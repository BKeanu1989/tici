*,
*::after,
*::before{
    box-sizing: border-box; 
}

:root{
    font-family: sans-serif;
    font-size: 1rem;
    
    --bgColor: hsla(0,90%,90%,1);
    --borderColor: hsla(0,50%,30%,1);
}
h1{
    color: hsla(20,100%,30%,1);
    font-size: 2rem;
}
h2,h3{
    font-size: 1.2rem;
}

p{
    font-size: 1rem;
}

h2{
    color: hsla(10,10%,30%,1);
}
.logo{
    display: block;
    margin:auto; /*Hier hat ein ; gefehlt.*/
    width: 50%;
}

blockquote{
    background: var(--bgColor);
    text-align: center;
    padding: 2%;
    margin:2%;
    width:60%;
    box-shadow: 0 8px 6px -6px black;
}

ul{
    list-style: none;
    margin: 2%;
    padding: 2%;
}

/*flex-container*/
nav>ul{
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    height: 20vh;
    align-items: center;
    align-content: center;
}

nav li{
    text-align: center;
    background: hsla(var(--main-hue),100%,85%,1);
    width: calc(92%/4);
    margin: 1%;
}

/*flex-items*/
nav li{
	/*flex-grow ist kein Wert für flex.
	flex bekommt drei Werte, den grow-Wert, den shrink-Wert und den basis-Wert
	flex: grow shrink basis
	Und die müssen alle Zahlen sein*/
    /*flex: flex-grow;*/
	/*Wenn Sie die flex-items umbrechen lassen wollen, wenn der Bildschirm kleiner wird, dann müssen Sie im flex-container den Wert wrap setzen.*/
}

/*Wenn die article nebeneinander stehen, dann müssen sie flex-items sein.
Sie brauchen einen flex-container.
Legen Sie dafür im HTML-Dokument <main> um alle article.
Die main wird dann zum flex-container mit display: flex gemacht.*/

/*Hier machen Sie den article zum Flexcontainer, d.h. die Kinder werden zu flex-items und somit angeordnet.
Das müssen Sie für die Aufgabe gar nicht. Sie dürfen aber.*/
article{
    flex: 0 1 20em;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-content: flex-start;
}

img { 
    width: 100%; 
    height: auto;
}